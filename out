#!/bin/bash

set -euo pipefail

exec 3>&1
exec 1>&2
jq -M -S . < /dev/stdin > /tmp/input.json

if [ "$(jq -r '.source | has("webhook")' < /tmp/input.json)" = 'true' ]; then
    webhook="$(jq -r .source.webhook < /tmp/input.json)"
    sha1="$(echo "$webhook" | sha1sum | awk '{print $1}')"
else
    echo "You need to provide the webhook."
    exit 1
fi

if [ "$(jq -r '.params | has("link")' < /tmp/input.json)" = 'true' ]; then
    link="$(jq -r .params.link < /tmp/input.json)"
else
    link="$(jq -r .source.link < /tmp/input.json)"
fi

if [ "$(jq -r '.params | has("badge")' < /tmp/input.json)" = 'true' ]; then
    badge="$(jq -r .params.badge < /tmp/input.json)"
else
    badge="$(jq -r .source.badge < /tmp/input.json)"
fi

case "$0" in
    (/opt/resource/check)
        json='[{"webhook":"'"$(dirname "$webhook")"'","sha1":"'"$sha1"'"}]'
        ;;
    (/opt/resource/out)
        cd "$1"
        message=
        if [ "$(jq -r '.params | has("message")' < /tmp/input.json)" = 'true' ]; then
            message="$(jq -r .params.message < /tmp/input.json)"
        elif [ "$(jq -r '.params | has("path")' < /tmp/input.json)" = 'true' ]; then
            path="$(jq -r .params.path < /tmp/input.json)"
        else
            echo "You need to provide the message or the path to read the message.log."
            exit 1
        fi
        json='{"version":{"webhook":"'"$(dirname "$webhook")"'","sha1":"'"$sha1"'"},"metadata":[{"name":"message","value":"'
        if [ -n "$message" ]; then
            message="${message//\\/\\\\}"
            message="${message//\"/\\\"}"
            json+="${message}"
        elif [ -n "$path" ]; then
            message="$(cat "$path"/message.log)"
            message="${message//\\/\\\\}"
            message="${message//\"/\\\"}"
            json+="${message}"
        fi
        json+='"}]}'
        if [ "$badge" = 'true' ]; then
            BADGE=" ![badge]($ATC_EXTERNAL_URL/api/v1/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/badge)"
        else
            BADGE=''
        fi
        if [ "$link" = 'true' ]; then
            LINK=" [[log]]($ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME)"
        else
            LINK=''
        fi
        if [ -n "$message" ]; then
            curl -i -X POST --data-urlencode 'payload={"text": "'"$message$LINK$BADGE"'"}' "$webhook"
        fi
        ;;
    (*)
        json='{"version":{"webhook":"'"$(dirname "$webhook")"'","sha1":"'"$sha1"'"}}'
        ;;
esac

jq -n "$json" >&3
